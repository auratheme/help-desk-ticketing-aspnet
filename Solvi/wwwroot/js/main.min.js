function scrollToTop() { window.scrollTo({ top: 0, behavior: "smooth" }) } initDropdownlist(), formatDateText(), formatDateTimeText(), initDateInputs(), initDateTimeInputs(), [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]')).map(function (e) { return new bootstrap.Tooltip(e) }); const topnav = document.querySelector("#top-navigation"); function hideDummySpinnerHeaderFooter(e) { let t = document.querySelector("#" + e + " .spinner"), o = document.querySelector("#" + e + " .dummyfooter"); t.classList.remove("d-flex"), t.classList.add("d-none"), o.classList.add("d-none") } function closeBsModal(e) { new bootstrap.Modal(document.getElementById(e)).hide() } void 0 !== topnav && null != topnav && document.addEventListener("scroll", () => { window.scrollY > 100 ? topnav.classList.add("scrolled") : topnav.classList.remove("scrolled"), topnav.classList.contains("scrolled-shadow") && (window.scrollY > 100 ? topnav.classList.add("shadow") : topnav.classList.remove("shadow")) }); var bgimg = document.querySelector("[data-img]"); if (void 0 !== bgimg && null != bgimg) { for (var element, dataimgs = document.querySelectorAll("[data-img]"), i = 0; element = dataimgs[i]; i++)if ("" != element.getAttribute("data-img")) { var e = element.getAttribute("data-img"), t = element.getAttribute("data-img-position"), o = element.getAttribute("data-img-attachment"); element.style.backgroundImage = "url(" + e + ")", void 0 !== t && null != t ? element.style.backgroundPosition = t : element.style.backgroundPosition = "center center", void 0 !== o && null != o ? element.style.backgroundAttachment = o : element.style.backgroundAttachment = "scroll", element.style.backgroundSize = "cover", element.style.backgroundRepeat = "no-repeat" } } function loading(e) { let t = document.getElementById("loading"); e && (t.querySelector("#loadingtext").innerText = e), t.classList.remove("d-none") } var cursorImg = document.querySelectorAll(".cursor-img"); function moveImg(e) { for (var t = cursorImg.length; t--;)cursorImg[t].style.left = e.clientX + "px", cursorImg[t].style.top = e.clientY + "px" } function getNumberAbbreviation(e) { var t = e; if (e >= 1e3) { for (var o = Math.floor(("" + e).length / 3), r = "", n = 2; n >= 1 && !(((r = parseFloat((0 != o ? e / Math.pow(1e3, o) : e).toPrecision(n))) + "").replace(/[^a-zA-Z 0-9]+/g, "").length <= 2); n--); r % 1 != 0 && (r = r.toFixed(1)), t = r + ["", "k", "m", "b", "t"][o] } return t } function handleDropdownSelection(e) { let t = e.target, o = t.closest(".form-dropdown"), r = o.querySelector(".form-dropdown .dropdown-input"); r.value = t.dataset.value, o.querySelectorAll(".dropdown-item").forEach(e => e.classList.remove("active")), t.classList.add("active"); let n = o.querySelector(".form-dropdown .dropdown-toggle"); n.innerText = t.innerText } function initDropdownlist() { let e = document.querySelectorAll(".form-dropdown.dropdown"); e.forEach(function (e) { e.addEventListener("click", function (t) { searchEventInDropDown(e) }) }); let t = document.querySelectorAll(".form-dropdown .dropdown-item"); void 0 !== t && null != t && t.forEach(e => { e.addEventListener("click", handleDropdownSelection) }) } function searchEventInDropDown(e) { let t = e.querySelector(".form-control.search"); if (t) { t.focus(), t.click(); let o = -1, r = [], n = e.querySelectorAll(".dropdown-list a").length; r.push(...Array.from({ length: n }, (e, t) => t)), t.addEventListener("input", function (t) { r.length = 0; let n = t.target.value.toLowerCase(), l = e.querySelectorAll(".dropdown-list a"); l.forEach((e, t) => { let l = e.textContent.toLowerCase(); l.includes(n) ? (e.parentElement.style.display = "", r.push(t), t === o && e.focus()) : e.parentElement.style.display = "none" }), o = -1 }), t.addEventListener("keydown", function (t) { let n = e.querySelectorAll(".dropdown-list a"); var l = !1; if ("ArrowDown" === t.key) r.length, o < r.length - 1 && (o = (o + 1) % r.length, l = !0); else if ("ArrowUp" === t.key) o > 0 && (o = (o - 1 + r.length) % r.length, l = !0); else if ("Enter" === t.key) { t.preventDefault(); var a = r[o]; n[a].click() } if (!0 == l) { n.forEach(e => e.classList.remove("active")); var a = r[o]; n[a].focus(), n[a].classList.add("active"), n[a].scrollIntoView({ behavior: "smooth", block: "nearest" }) } }) } } function clickHandler(e) { e.preventDefault(), e.target.removeEventListener("click", clickHandler) } function changeDropDownListItems(e, t, o) { var r = document.querySelector(`#${e}`); r.querySelector("button").innerText = o, r.querySelector("input.dropdown-input").value = ""; for (var n = r.querySelector("ul"), l = n.querySelectorAll(".dropdown-list"), a = 0; a < l.length; a++)l[a].remove(); t.forEach(function (e) { var t = document.createElement("li"); t.className = "dropdown-list"; var o = document.createElement("a"); o.className = "dropdown-item", o.setAttribute("data-value", e.Value), o.innerText = e.Text, t.appendChild(o), n.appendChild(t) }), initDropdownlist() } function resetDropDown(e, t) { if (void 0 != document.querySelectorAll(`#${e}-ddl .dropdown-item`)) { var o = document.querySelector(`#${e}-ddl .dropdown-menu input`); void 0 != o && (o.values = ""); var r = document.querySelector(`#${e}-ddl .dropdown-item.active`); void 0 != r && r.classList.remove("active"); let n = document.querySelector(`#${e}-ddl .dropdown-toggle`); void 0 != n && (n.innerText = t); let l = document.querySelector(`input.dropdown-input[name='${e}']`); void 0 != l && (l.value = "") } } function initDateInputs() { let e = document.querySelectorAll('input[type="date"]'); e.length > 0 && e.forEach(function (e) { e.addEventListener("change", function () { setDateValue(e) }) }) } function initDateTimeInputs() { let e = document.querySelectorAll('input[type="datetime-local"]'); e.length > 0 && e.forEach(function (e) { e.addEventListener("change", function () { setDateTimeValue(e) }) }) } function setDateValue(e) { let t = e.value; if ("" != t && null != t) { let o = new Date(t), r = o.toISOString().substring(0, 10); e.value = r, e.setAttribute("value", r) } } function setDateTimeValue(e) { let t = e.value; if ("" != t && null != t) { let o = new Date(t), r = o.toISOString().substring(0, 16); e.value = r, e.setAttribute("value", r) } } function convertToLocalDateIsoString(e) { let t = new Date(e); return t.toLocaleDateString(void 0, { year: "numeric", month: "2-digit", day: "2-digit" }).substring(0, 10) } function convertToLocalDatetimeIsoString(e) { let t = new Date(e), o = new Date(t.getTime() - 6e4 * t.getTimezoneOffset()), r = o.getFullYear() + "-" + (o.getMonth() + 1).toString().padStart(2, "0") + "-" + o.getDate().toString().padStart(2, "0") + "T" + o.getHours().toString().padStart(2, "0") + ":" + o.getMinutes().toString().padStart(2, "0"); return r } function getFormattedDateTime(e) { var t = e.trim(); if (null == t || "" == t || void 0 == t) return ""; var o = t.substring(0, 16), r = new Date(o); return new Date(r.getTime() - 6e4 * r.getTimezoneOffset()).toLocaleTimeString([], { year: "numeric", month: "2-digit", day: "2-digit", hour: "2-digit", minute: "2-digit" }) } function getFormattedDate(e) { let t = new Date(e); var o = new Date().getTimezoneOffset(); return new Date(t.getTime() - 6e4 * o).toLocaleString([], { year: "numeric", month: "2-digit", day: "2-digit" }) } function formatDateTimeText(e) { if (void 0 === e ? document.querySelector(".datetimetext") : document.getElementById(e).querySelector(".datetimetext")) { var t = void 0 === e ? document.querySelectorAll(".datetimetext") : document.getElementById(e).querySelectorAll(".datetimetext"); for (let o of t) { var r = $(o).text(); if ("" != r && null != r) { var n = getFormattedDateTime(r); $(o).text(n) } } } } function formatDurationText() { var e = document.querySelectorAll(".dateduration"); e && e.forEach(function (e) { var t, o = new Date(e.textContent).getTime(), r = getFormattedDuration(Math.floor((Date.now() - o) / 1e3)); e.innerText = r }) } function getFormattedDuration(e) { var t = ""; if (e < 60) t = "few seconds ago"; else if (e < 3600) { var o = Math.floor(e / 60); t = o + (1 === o ? " minute ago" : " minutes ago") } else if (e < 86400) { var r = Math.floor(e / 3600); t = r + (1 === r ? " hour ago" : " hours ago") } else { var n = Math.floor(e / 86400); t = n + (1 === n ? " day ago" : " days ago") } return t } void 0 !== cursorImg && null != cursorImg && document.addEventListener("mousemove", moveImg, !1); var dtInput = document.querySelector("input.datetimetext-input"); if (dtInput) for (const datetimeInput of document.querySelectorAll("input.datetimetext-input")) { let r = new Date(datetimeInput.value), n = new Date(r.getTime() - 6e4 * r.getTimezoneOffset()); datetimeInput.value = n.toISOString().slice(0, -1) } function formatDateText(e) { if (void 0 === e ? document.querySelector(".datetext") : document.getElementById(e).querySelector(".datetext")) { var t = void 0 === e ? document.querySelectorAll(".datetext") : document.getElementById(e).querySelectorAll(".datetext"); for (let o of t) { var r = $(o).text(); if ("" != r && null != r) { var n = getFormattedDate(r); $(o).text(n) } } } } function getNumberAbbreviation(e) { var t = e; if (e >= 1e3) { for (var o = Math.floor(("" + e).length / 3), r = "", n = 2; n >= 1 && !(((r = parseFloat((0 != o ? e / Math.pow(1e3, o) : e).toPrecision(n))) + "").replace(/[^a-zA-Z 0-9]+/g, "").length <= 2); n--); r % 1 != 0 && (r = r.toFixed(1)), t = r + ["", "k", "m", "b", "t"][o] } return t } function shareToX() { let e = encodeURIComponent(window.location.href), t = encodeURIComponent("Check out this article!"), o = `https://x.com/intent/tweet?url=${e}&text=${t}`; window.open(o, "_blank", "noopener,noreferrer") } function shareToFacebook() { copyCurrentUrl(!1); let e = encodeURIComponent(window.location.href), t = `https://www.facebook.com/sharer/sharer.php?u=${e}`; window.open(t, "_blank", "noopener,noreferrer") } function shareToWhatsApp() { let e = encodeURIComponent(window.location.href), t = encodeURIComponent("Check out this article: "), o = `https://wa.me/?text=${t}${e}`; window.open(o, "_blank", "noopener,noreferrer") } function copyCurrentUrl(e) { let t = window.location.href; if (navigator.clipboard && window.isSecureContext) navigator.clipboard.writeText(t).then(() => { e && showSuccessToast("URL copied to clipboard!") }).catch(e => { console.error("Failed to copy URL: ", e) }); else { let o = document.createElement("textarea"); o.value = t, document.body.appendChild(o), o.select(); try { document.execCommand("copy"), e && showSuccessToast("URL copied to clipboard!") } catch (r) { console.error("Fallback copy failed: ", r) } document.body.removeChild(o) } } function copyText(e) { let t = (e.innerText ?? e.innerHTML).trim(); navigator.clipboard.writeText(t).then(function () { document.querySelector("#copiedToast .toast-body").innerText = "Copied successfully!"; var e = document.querySelector("#copiedToast"); new bootstrap.Toast(e, { delay: 1500, animation: !1, autohide: !0 }).show() }).catch(function (e) { console.error("Unable to copy text: ", e) }) } function copyFromModal(e, t) { var o = document.getElementById(t).querySelector("#" + e).innerText.trim(); navigator.clipboard.writeText(o).then(function () { showCopiedSuccess() }).catch(function (e) { console.error("Unable to copy text: ", e) }) } function copyMultipleText(e) { let t = ""; e.forEach(function (e) { t += e.innerText + "\n\n" }), navigator.clipboard.writeText(t).then(function () { document.querySelector("#copiedToast .toast-body").innerText = "Copied successfully!"; var e = document.querySelector("#copiedToast"); new bootstrap.Toast(e).show() }).catch(function (e) { console.error("Unable to copy text: ", e) }) } function showCopiedSuccess() { var e = document.querySelector("#copiedToast .toast-body"); e && (e.innerText = "Copied success!"); var t = document.querySelector("#copiedToast"); t && new bootstrap.Toast(t).show() } function showNotificationToast(e) { var t = document.querySelector("#notificationToast .toast-body"); t && (t.innerText = e); var o = document.querySelector("#notificationToast"); o && new bootstrap.Toast(o).show() } function showFailedToast(e) { var t = document.querySelector("#ajaxFailedToast .toast-body"); t && (t.innerText = e); var o = document.querySelector("#ajaxFailedToast"); o && new bootstrap.Toast(o).show() } function showSuccessToast(e) { var t = document.querySelector("#ajaxSuccessToast .toast-body"); t && (t.innerText = e); var o = document.querySelector("#ajaxSuccessToast"); o && new bootstrap.Toast(o).show() } function addTextareaEnterListener(e, t) { e.addEventListener("keydown", function (o) { if (13 === o.keyCode && o.shiftKey); else if (13 === o.keyCode && !o.shiftKey) { o.preventDefault(); let r = e; null != r && null != r.value && "" != r.value && t && t.click() } }) } function autoResizeHeight(e) { e.style.height = "auto", e.style.height = `${e.scrollHeight}px`, e.scrollHeight > 85 ? document.getElementById("conversationWrapper").style.maxHeight = "67%" : document.getElementById("conversationWrapper").style.maxHeight = "75%" } function decodeHTML(e) { let t = new DOMParser, o = t.parseFromString(e, "text/html"); return o.documentElement.textContent } function formatResponse(e) { let t = e.replace(/^.*?(```\w*\n)/s, "$1"), o = t.replace(/```([\s\S]+?)```/g, (e, t) => `<pre><code>${t}</code></pre>`); var r = o.replace(/`([\s\S]+?)`/g, (e, t) => `<code>${t}</code>`); r.startsWith("\n\n") && (r = r.substring(2)); var n = r.replace(/(https?:\/\/[^\s]+)/g, '<a href="$1" class="fw600 color-primarycolor" target="_blank">$1</a>'); let l = n.replace(/\n/g, "<br>"); return l } function splitByHtml(e) { let t = e.split(/(<pre><code>.*?<\/code><\/pre>)|(<br>)|(<pre>)|(<\/pre>)|(<code>)|(<\/code>)|(<b>.*?<\/b>)|(<a[^>]*?>.*?<\/a>)/gs); var o = t.filter(e => "" !== e && "undefined" !== e && void 0 !== e); let r = []; for (let n = 0; n < o.length; n++)void 0 != o[n] && "undefined" != o[n] && null != o[n] && r.push(o[n]); return r } function applyTypingEffectToArray(e, t, o) { "<br>" === e[0] && "<br>" === e[1] ? e.splice(0, 2) : "<br>" === e[0] && e.splice(0, 1); let r = 0, n = 0, l = document.getElementById("cursor"); null != l && (l.classList.remove("invisible"), l.classList.add("visible")); let a = setInterval(() => { if (r < e.length) { if (e[r].startsWith("<pre>")) { let s = document.createElement("div"); var c = e[r].replace(/<br>/g, "\n"); s.innerHTML = c, t.appendChild(s), hljs.highlightAll(), r++, n = 0 } else if ("<br>" == e[r]) t.innerHTML += "<br>", r++, n = 0; else if (e[r].startsWith("<a")) t.innerHTML += e[r], r++, n = 0; else if (e[r].startsWith("<b>")) t.innerHTML += e[r], r++, n = 0; else if (n < e[r].length) { let d = e[r].charAt(n), u = document.createTextNode(d); t.appendChild(u), n++ } else r++, n = 0 } else null != l && (l.classList.remove("visible"), l.classList.add("invisible")), clearInterval(a); null != o && (o.scrollTop = o.scrollHeight) }, 11) } function getFileName(e) { let t; return "translation-" + new Date().toISOString().replace(/:/g, "-").replace(/\..+/, "") + "." + e } function exportStringToExcel(e, t) { let o = `<table class='d-none'><tr><td>${document.getElementById(e).innerText}</td></tr></table>`, r = document.createElement("div"); r.id = "tableToExport", r.innerHTML = o, r.setAttribute("data-filename", t), document.body.appendChild(r); !0 == exportToExcel("tableToExport") && document.body.removeChild(r) } function exportStringToCsv(e, t) { let o = `<table class='d-none'><tr><td>${document.getElementById(e).innerText}</td></tr></table>`, r = document.createElement("div"); r.id = "tableToExport", r.innerHTML = o, r.setAttribute("data-filename", t), document.body.appendChild(r); !0 == exportToCsv("tableToExport") && document.body.removeChild(r) } function exportStringToPdf(e) { let t = document.querySelectorAll('[id^="PrintMessage_"]'); t.forEach(e => { e.classList.add("nonprintable") }); let o = document.querySelector(`#${e}`); o.classList.remove("nonprintable"), window.print() } function applyTypingEffectToArray(e, t, o) { "<br>" === e[0] && "<br>" === e[1] ? e.splice(0, 2) : "<br>" === e[0] && e.splice(0, 1); let r = 0, n = 0, l = document.getElementById("cursor"); null != l && (l.classList.remove("invisible"), l.classList.add("visible")); let a = setInterval(() => { if (r < e.length) { if (e[r].startsWith("<pre>")) { let s = document.createElement("div"); var c = e[r].replace(/<br>/g, "\n"); s.innerHTML = c, t.appendChild(s), hljs.highlightAll(), r++, n = 0 } else if ("<br>" == e[r]) t.innerHTML += "<br>", r++, n = 0; else if (e[r].startsWith("<a")) t.innerHTML += e[r], r++, n = 0; else if (e[r].startsWith("<b>")) t.innerHTML += e[r], r++, n = 0; else if (n < e[r].length) { let d = e[r].charAt(n), u = document.createTextNode(d); t.appendChild(u), n++ } else r++, n = 0 } else null != l && (l.classList.remove("visible"), l.classList.add("invisible")), clearInterval(a); null != o && (o.scrollTop = o.scrollHeight) }, 11) } function getFileExtension(e) { if (e.startsWith("http")) { let t = new URL(e), o = t.pathname; return o.substring(o.lastIndexOf(".") + 1) } if (e.startsWith("data:image")) { let r = e.split(";")[0].split("/")[1]; return "jpeg" === r ? "jpg" : r } return null } setTimeout(() => { let e = document.querySelector("#successtoast-container .toast.show"); e && e.classList.remove("show"), $("#successtoast-container").hide() }, 2500), setTimeout(() => { let e = document.querySelector("#failedtoast-container .toast.show"); e && e.classList.remove("show"), $("#failedtoast-container").hide() }, 5200);